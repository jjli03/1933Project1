{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Joshua Li, li002380\
Utilizes a stack to build a 2D array of cells with different attributes which are updated based on random direction. Uses the canvas class the the 2D array to build a visual representation of the maze created by the stack. A final method uses a queue to gather all reachable neighbors within the 2D array maze and update their attributes if they are within the pathway. \
Assumptions are that the user inputs a correct number to build the grid. There is also an assumption made that the user knows that accessing down in the make and search methods can be done by adding to the initial y and vice versa. \
Credit: \
-Generating a random number within a range: https://docs.oracle.com/javase/8/docs/api/java/util/Random.html and IntelliJ \
-BFS search method from Lab 11 was used to help construct the search method\
Bugs: When search is run and there is a case the end is directly right of the cell accessed, if there is an accessible cell below, that one will also be visited.\
I certify that the information contained in this README file is complete and accurate. I have both read and followed the course policies in the \'91Academic Integrity - Course Policy\'92 section of the course syllabus.\
Joshua Li}